.. _accessibility:

.. meta::
    :description lang=en:
        The features and plans for addressing accessibility concerns on the PyData Sphinx Theme.

*************
Accessibility
*************

Creating and publishing content that does not exclude disabled users is a complex and iterative task.

While there is no one-size-fits-all solution to maintaining accessible content, the PyData Sphinx Theme
and this documentation site use some techniques to avoid common content shortcomings.

.. Note::

    Issues and pull requests to identify or fix accessibility issues on this theme
    or site are heartily welcomed!


What We've Done
^^^^^^^^^^^^^^^

Metadata
========

Several of our documentation pages contain metadata (i.e., ``.. meta::`` directives
in reStructuredText) giving summaries of the page contents. If you notice a
page that lacks metadata, please open a pull request to add it!


Colors
======

* Our default code highlighting styles are ``a11y-high-contrast-light`` and
  ``a11y-high-contrast-dark`` from https://github.com/Quansight-Labs/accessible-pygments.
  These styles are designed to meet WCAG 2 AA or AAA contrast requirements.
  If you don't like the look of our default code highlighting styles, there are several more
  to choose from at https://github.com/Quansight-Labs/accessible-pygments.
* We recently revisited the PyData Sphinx theme color palette to ensure that
  the colors we use meet WCAG 2 AA or AAA contrast requirements.
* We also re-defined our ``primary`` and ``secondary`` colors to be more accessible and distinct from semantic colors used
  to denote success, warning, info, and danger contexts or information.
* We simplified the color palette and removed some colors that were problematic to meeting WCAG 2 AA or AAA contrast requirements
  and for certain types of colorblindness.
* We have improved how we assign text colors to interactive elements such as buttons and dropdowns to ensure that they meet
  WCAG 2 AA or AAA contrast requirements.

What You Can Do
^^^^^^^^^^^^^^^

Site configuration
==================

The following sections include recommendations for settings in the ``conf.py`` file that can positively impact the
accessibility of content generated by this theme, and Sphinx in general.


Natural Language
----------------

If not using a more robust `internationalization approach <https://www.sphinx-doc.org/en/master/usage/advanced/intl.html>`__,
specifying at least the baseline natural language will help assistive technology
identify if the content is in a language the reader understands.

.. Hint::

    Specifying a ``language`` will propagate to the top-level ``HTML`` tag.

    .. code-block:: Python

        language = "en"


Add a Site Map
--------------

Site maps, usually served from a file called `sitemap.xml` are a broadly-employed
approach to telling programs like search engines and assistive technologies where
different content appears on a website.

If using a service like `ReadTheDocs <https://readthedocs.com>`__, these files
will be created for you *automatically*, but for some other approaches below,
it's handy to generate a `sitemap.xml` locally or in CI with a tool like
`sphinx-sitemap <https://pypi.org/project/sphinx-sitemap/>`__.

.. Hint::

    For a simple site (no extra languages or versions), ensure `sphinx-sitemap`
    is installed in your documentation environment, and modify your ``conf.py``:

    .. code-block:: python

        extensions += ["sphinx_sitemap"]

        html_baseurl = os.environ.get("SPHINX_HTML_BASE_URL", "http://127.0.0.1:8000/")
        sitemap_locales = [None]
        sitemap_url_scheme = "{link}"


Logo best practices
--------------------

If you use both light and dark themes, it's best to provide a logo that works well in both or to provide an alternative for the dark theme.
If you have a logo, you can add alt-text to it by adding the following to your
``conf.py``:

.. code-block:: python

  "logo": {
      "text": "PyData Theme",
      "image_dark": "_static/logo-dark.svg",
      "alt_text": "PyData Theme home",
  },

Note the use of "home" in the alt text to indicate that the logo is also a link to the home page.

In the Browser
==============

A number of in-browser tools exist for interactively debugging the accessibility
of a single page at a time, and can be useful during the content development cycle.


Built-in tools
--------------


Most major browsers, including `Firefox <https://developer.mozilla.org/en-US/docs/Tools/Accessibility_inspector>`__
and `Chrome <https://developers.google.com/web/tools/chrome-devtools/accessibility/reference>`__,
have accessibility tools built-in as part of their web developer tools.
These tools can help to quickly identify accessibility issues and often include links to standards.


tota11y
-------

`tota11y <https://khan.github.io/tota11y/#Installation>`__ is an open source
"bookmarklet" which modifies the currently-loaded page in place, and highlights
several accessibility issues.


WAVE
----

`WAVE <https://wave.webaim.org/extension/>`__ is a proprietary (but *gratis*)
browser extension which can highlight multiple issues.

.. Warning::
  Note that automated testing and extensions such as the ones mentioned above will at best catch 30-40% of accessibility issues.
  They are not a replacement for manual testing and having a perfect score on any of these tools does not mean that
  the site can be used by disabled users but instead signals that it follows some accessibility best practices.

In Continuous Integration
=========================

Several automated tools are available for assessing *glaring* accessibility
issues across some pages at once, usually with many configurable options.


Lighthouse
----------

`Lighthouse <https://developers.google.com/web/tools/lighthouse>`__, which provides
automated assessment of basic accessibility issues in addition to search engine
automation, page performance, and other best practices.


.. Hint::

    Specifically, `foo-software/lighthouse-check-action <https://github.com/foo-software/lighthouse-check-action>`__
    is run on selected pages from the generated documentation site.
