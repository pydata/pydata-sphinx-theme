name: Scheduled pre-release tests

on:
  schedule:
    # Run this workflow twice a week
    # ref: https://crontab.guru/#0_5_*_*_1,4
    - cron: "0 5 * * 1,4"
  workflow_dispatch:

env:
  FORCE_COLOR: "1" # Make tools pretty
  PIP_DISABLE_PIP_VERSION_CHECK: "1" # Don't check for pip updates

jobs:
  prerelease:
    # only run this workflow for pydata owned repositories (avoid forks)
    if: github.repository_owner == 'pydata'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: "Checkout repository ðŸ›Ž"
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: "Setup CI environment ðŸ› "
        uses: pydata/pydata-sphinx-theme/.github/actions/set-dev-env@01731d0cc57768b9eff1c97f38909932ecd7e7d1
        with:
          python-version: ${{ matrix.python-version }}
          pandoc: true

      - name: "Install (prerelease) dependencies ðŸ“¦"
        run: |
          python -Im pip install --upgrade pip wheel setuptools

      - name: "Build PST docs and check for warnings ðŸ“–"
        run: |
          # example substitution: tox run -e docs-py312-docs
          python -Im tox run -e docs-py$(echo ${{ matrix.python-version }} | tr -d .)-docs -- --keep-going

      - name: "Run tests âœ… (no coverage)"
        run: |
          # this will compile the assets then run the tests
          python -Im tox run -e compile-assets,i18n-compile,py$(echo ${{ matrix.python-version }} | tr -d .)-tests-no-cov
          echo "PYTEST_ERRORS=$?" >> $GITHUB_ENV

      - name: "Build and inspect package ðŸ“¦"
        uses: hynek/build-and-inspect-python-package@v2
        if: matrix.python-version == '3.9'
        id: baipp

      - run: echo Packages can be found at "${BAIPP_DIST}"
        if: matrix.python-version == '3.9'
        env:
          BAIPP_DIST: ${{ steps.baipp.outputs.dist }}

      # If either the docs build or the tests resulted in an error, create an issue to note it
      - name: "Create an issue if failure"
        uses: JasonEtco/create-an-issue@v2
        if: ${{ env.SPHINX_BUILD_UNEXPECTED_WARNINGS || !env.PYTEST_ERRORS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/prerelease-template.md
