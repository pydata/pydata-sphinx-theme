/*********************************************
* SASS Mixins
*********************************************/
/**
* Scrollbars should be thinner and slightly rounded, with a grey background
* ref: https://www.nngroup.com/articles/scrolling-and-scrollbars/
*/
@mixin scrollbar-style() {
  &::-webkit-scrollbar {
    width: 0.5rem;
    height: 0.5rem;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--pst-color-text-muted);
    border-radius: 0.25rem;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--pst-color-on-surface);
  }

  // Hovering behavior for the scrollbar
  // Include both hovering on the parent and on the thumb in case thumb is outside parent
  &:hover {
    &::-webkit-scrollbar-thumb {
      background: var(--pst-color-text-muted);
    }
  }

  &::-webkit-scrollbar-thumb:hover {
    background: var(--pst-color-text-muted);
  }
}

/**
 * Fade the scrollbar until the element is hovered, so it is less attention-grabbind
 */
@mixin scrollbar-on-hover() {
}

/**
 * create a low opacity background behind object using our variable colors
 */
@mixin background-from-color-variable($color-variable, $opacity: 0.1) {
  // This is a hack to create a light background with controlled opacity
  // using our css color variables
  // ref: https://stackoverflow.com/a/56951626/6734243

  &:before {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    background-color: var(#{$color-variable});
    opacity: $opacity;
  }
}

/**
 * Behavior for sliding drawer elements that will be toggled with an input
 *
 * NOTE: This mixin defines the behavior while *hidden* and we define the "show"
 * behavior in the sidebar_toggle.scss file
 */
@mixin sliding-drawer($side: "left", $breakpoint: lg) {
  // Note that media-breakpoint-down includes the widths above the breakpoint given
  // So we should provide the breakpoint just *above* where we want the behavior to trigger.
  @include media-breakpoint-down($breakpoint) {
    position: fixed;
    top: 0;
    z-index: $zindex-modal;
    height: 100vh;
    max-height: 100vh;
    width: 75%;
    max-width: 350px;
    transition: visibility $animation-time ease-out,
      margin $animation-time ease-out;
    visibility: hidden;

    @if $side == "right" {
      margin-right: -75%;
      right: 0;
    } @else {
      margin-left: -75%;
      left: 0;
    }
  }
}
