// Consistent styling for links
// ============================

@use "sass:string";

// Define some useful variables for links styling consistency

// The default thickness of the underline for links will be either:
//  - 1px
//  - 0.0625rem if it's thicker than 1px because the user has changed the text
//    size in their browser
$link-underline-thickness: string.unquote("max(1px, .0625rem)") !default;

// Offset of link underlines from text baseline
// The default is 3px expressed as ems, as calculated against the default body
// font size (on desktop).
$link-underline-offset: 0.1578em !default;

// Thickness of link underlines in hover state
// The default for each link will be the thickest of the following:
//  - 3px
//  - 0.1875rem, if it's thicker than 3px because the user has changed the text
//    size in their browser
//  - 0.12em (relative to the link's text size)
$link-hover-decoration-thickness: string.unquote(
  "max(3px, .1875rem, .12em)"
) !default;

// Ensures links have an underline decoration by default - needed to meet
// WCAG SC 1.4.1
@mixin link-decoration {
  text-decoration: underline;

  @if $link-underline-thickness {
    text-decoration-thickness: $link-underline-thickness;
  }

  @if $link-underline-offset {
    text-underline-offset: $link-underline-offset;
  }
}

// Ensures links have an underline decoration on hover - distinct from the
// default behaviour
@mixin link-decoration-hover {
  @if $link-hover-decoration-thickness {
    text-decoration-thickness: $link-hover-decoration-thickness;

    // Disable ink skipping on underlines on hover.
    text-decoration-skip-ink: none;
  }
}

// Simple hover style - can be used alone or in conjunction with other mixins
// Add the text underline and change in thickness on hover.
// Intended for use with the `:hover` pseudo-class.
@mixin link-style-hover {
  @include link-decoration;
  @include link-decoration-hover;

  color: var(--pst-color-link-hover);
}

// Default link styles
// -------------------
// Defines: default unvisited, visited, hover, and active.
// TODO: @trallard to improve focus styles in subsequent PR
@mixin link-style-default {
  // So that really long links don't spill out of their container
  word-wrap: break-word;
  color: var(--pst-color-link);

  @include link-decoration;

  &:hover {
    color: var(--pst-color-link-hover);

    @include link-decoration-hover;
  }

  // TODO: @trallard to add active styles in subsequent PR
  &:active {
    color: var(--pst-color-link);
  }

  // Visited should still be hoverable
  &:visited {
    color: var(--pst-color-link);

    &:hover {
      color: var(--pst-color-link-hover);
    }
  }
}

// Text link styles
// ----------------
// Makes links use the muted text colour and removes the underline.
// Use this mixin for navigation bar links.
@mixin link-style-text {
  color: var(--pst-color-text-muted);
  text-decoration: none;

  &:hover {
    color: var(--pst-color-link-hover);

    @include link-decoration;
    @include link-decoration-hover;
  }
}

// Sidebar and TOC links
// ---------------------
// Makes links use the muted text colour and removes the underline.
// Use this mixin for navigation the primary sidebar and table of contents.
// Active and hover should work together rather than one overriding the other.
@mixin link-sidebar {
  color: var(--pst-color-text-muted);
  text-decoration: none;

  &:hover {
    text-decoration: underline;
    background-color: transparent;
    color: var(--pst-color-link-hover);

    @include link-decoration-hover;
  }

  // TODO: @trallard to update active styles in subsequent PR
  &:active {
    color: var(--pst-color-link-hover);
  }

  &:focus-visible {
    box-shadow: $focus-ring-box-shadow;
    outline: none;
    z-index: 10; // keep focus ring on top (prevent the link-sidebar-current notch from lying on top of the ring)
  }
}

// Sidebar current page link styles
// --------------------------------
// Adds a vertical line on the left hand side of the link to indicate that
// it's the current page. Note this is distinct from an active state.
// Used on the primary sidebar and the TOC.
// We want the side box shadow to have the same thickness as the hover underline
@mixin link-sidebar-current {
  font-weight: 600;
  color: var(--pst-color-primary);

  @if $link-hover-decoration-thickness {
    $notch-shadow: inset
      $link-hover-decoration-thickness
      0
      0
      var(--pst-color-primary);

    box-shadow: $notch-shadow;

    &:focus-visible {
      box-shadow: $notch-shadow, $focus-ring-box-shadow;
      outline: none;
    }
  }
}

// Navigation bar current page link styles
// ---------------------------------------
// Adds a bottom underline, this leaves enough space for the hover state without
// cluttering the navbar.
// We want the side box shadow to have the same thickness as the hover underline
@mixin link-navbar-current {
  font-weight: 600;
  color: var(--pst-color-primary);

  @if $link-hover-decoration-thickness {
    border-bottom: $link-hover-decoration-thickness
      solid
      var(--pst-color-primary);
  }
}

// Navigation bar icon links hover styles
// --------------------------------------
// Adds a bottom box-shadow - since there is no text we cannot use text-decoration
// We want the side box shadow to have the same thickness as the hover underline
@mixin icon-navbar-hover {
  &:hover {
    color: var(--pst-color-link-hover);

    @if $link-hover-decoration-thickness {
      box-shadow: 0
        $link-hover-decoration-thickness
        0
        var(--pst-color-link-hover);
    }
  }
}

// Mixin for links in the header (and the More dropdown toggle).

// The mixin assumes it will be applied to some element X with a markup structure
// like: X > .nav-link, or X > .dropdown-toggle.

// It also assumes X.current is how the app annotates which item in the header nav
// corresponds to the section in the docs that the user is currently reading.
@mixin header-link {
  // Target the child and not the parent because we want the underline in the
  // mobile sidebar to only span the width of the text not the entire row/line.
  > .nav-link,
  > .dropdown-toggle {
    border-radius: 2px;
    color: var(--pst-color-text-muted);
  }

  > .nav-link {
    // Set up pseudo-element for hover and current states below.
    position: relative;

    &::before {
      content: "";
      display: block;
      position: absolute;
      inset: 0;
      background-color: transparent;
    }

    // Underline on hover.
    // - Don't use text-decoration because it will wrap across two lines if
    //   the link text also wraps across two lines.
    // - Use pseudo-element in order to avoid the border-radius values
    //   rounding the edges of the underline. (And since a header link can be
    //   both focused and hovered at the same time and we want the focus ring
    //   but not the underline to be rounded, we cannot use a box shadow or
    //   bottom border link element to create the underline, or else it will
    //   be rounded and if we apply border-radius 0 then the hovered focus
    //   ring would go from rounded to sharp. So we have to use the
    //   pseudo-element.)
    &:hover {
      color: var(--pst-color-secondary);
      text-decoration: none; // override the link-style-hover mixin
      &::before {
        border-bottom: 3px solid var(--pst-color-secondary);
      }
    }

    &:focus-visible {
      box-shadow: none; // override Bootstrap
      outline: 3px solid var(--pst-color-accent);
      outline-offset: 3px;
    }
  }

  > .dropdown-toggle {
    &:focus-visible {
      box-shadow: $focus-ring-box-shadow;
    }

    &:hover {
      text-decoration: none;
      box-shadow: 0 0 0 $focus-ring-width var(--pst-color-link-hover); // purple focus ring
      // Brighten the text on hover (muted -> base)
      color: var(--pst-color-text-base);
    }
  }

  &.current {
    > .nav-link {
      color: var(--pst-color-primary);

      // Underline the current navbar item
      &::before {
        border-bottom: 3px solid var(--pst-color-primary);
      }
    }
  }
}
